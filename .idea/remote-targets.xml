<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="RemoteTargetsManager">
    <targets>
      <target name="golang:alpine" type="docker" uuid="bd95f863-bbf0-43d6-a2aa-38ed9492b0df">
        <config>
          <option name="targetPlatform">
            <TargetPlatform />
          </option>
          <option name="buildImageConfig">
            <BuildImageConfig>
              <option name="builtImageTag" value="golang:alpine" />
              <option name="dockerFile" value="Dockerfile" />
            </BuildImageConfig>
          </option>
          <option name="containerConfig">
            <ContainerConfig>
              <option name="runCliOptions" value="-p 8080:8080" />
            </ContainerConfig>
          </option>
        </config>
        <ContributedStateBase type="GoLanguageRuntime">
          <config>
            <option name="compiledExecutablesVolume">
              <VolumeState>
                <option name="targetSpecificBits">
                  <map>
                    <entry key="mountAsVolume" value="false" />
                  </map>
                </option>
              </VolumeState>
            </option>
            <option name="goPath" value="/go" />
            <option name="goRoot" value="/usr/local/go/bin/go" />
            <option name="goVersion" value="go1.20.2 linux/arm64" />
            <option name="projectSourcesVolume">
              <VolumeState>
                <option name="targetSpecificBits">
                  <map>
                    <entry key="mountAsVolume" value="false" />
                  </map>
                </option>
              </VolumeState>
            </option>
          </config>
        </ContributedStateBase>
      </target>
      <target name="docker-compose" type="docker-compose" uuid="ce2c6d49-8b96-410d-ab46-31460fa092d0">
        <config>
          <option name="targetPlatform">
            <TargetPlatform />
          </option>
          <option name="configurationFiles">
            <list>
              <option value="$PROJECT_DIR$/docker-compose.yml" />
            </list>
          </option>
          <option name="envs">
            <map>
              <entry key="DOCKERHUB_TOKEN" value="dckr_pat_xcOM7cITP_Y3ZR8heh-ZYhHvaD4" />
              <entry key="DOCKERHUB_USERNAME" value="bennu7" />
              <entry key="DbHost" value="topsy.db.elephantsql.com" />
              <entry key="DbName" value="qsqfgjrl" />
              <entry key="DbPass" value="hdNLYmpYoUqCWcoFHNDWoOA3LGvOApNY" />
              <entry key="DbPort" value="5432" />
              <entry key="DbUser" value="qsqfgjrl" />
              <entry key="TOKEN_EXPIRED" value="120" />
              <entry key="TOKEN_KEY" value="ImWDKthBUGCVWCtXHyWbpcwM7SeBHIEd" />
            </map>
          </option>
          <option name="serviceName" value="app" />
        </config>
        <ContributedStateBase type="GoLanguageRuntime">
          <config>
            <option name="goPath" value="product_sales-app" />
            <option name="goRoot" value="air" />
          </config>
        </ContributedStateBase>
      </target>
    </targets>
  </component>
</project>